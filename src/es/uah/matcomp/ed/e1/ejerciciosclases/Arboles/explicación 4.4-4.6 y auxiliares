4- Verifica que la suma es la misma cuando se suman los elementos de los subárboles
izquierdo y derecho. ¿Por qué?


Sí, la suma es la misma. Se cumple la propiedad de los árboles binarios de búsqueda:

suma total = valor en la raíz + suma del subárbol izquierdo + suma del subárbol derecho

Esto ocurre porque cada nodo está en un único lugar del árbol, por lo que no hay duplicados
ni omisiones.




5- ¿Cuál es la altura del árbol? Explica el porque.


La altura del árbol con inserción aleatoria fue aproximadamente 11. Esto se debe a que al
insertar de forma aleatoria, los nodos se distribuyen mejor y no se acumulan todos a un solo
lado, como sí ocurre cuando se insertan en orden.




6- ¿Cuál es el camino para llegar al valor 110? ¿Cuál es su longitud de camino?


El camino hasta el nodo con valor 110 varía dependiendo del orden de inserción.
Por ejemplo:

[88, 113, 39, 77, 105, 91, 110].

La longitud del camino es igual al número de nodos recorridos menos uno.
En este caso, 7 - 1 = 6 saltos.




7- Diferencias (si las ha habido) de los resultados obtenidos entre los dos programas de prueba.

Diferencias clave:
- Inserción ordenada genera un árbol degenerado (como una lista), mientras que la inserción aleatoria
genera un árbol más equilibrado.
- Altura con ordenada: 129. Altura con aleatoria: ~11.
- Camino hasta 110 en ordenada: 111 pasos. En aleatoria: típicamente < 10.
En ambos casos, la suma total es idéntica porque los elementos son los mismos.




8- ¿Qué sucede con los resultados si ejecuta los programas de prueba varias veces?


Con inserción ordenada, el árbol y resultados siempre son los mismos. Con inserción 
aleatoria, los resultados cambian (camino a un nodo, altura), excepto si se fija la 
semilla del generador aleatorio.La suma total siempre será la misma si los valores
insertados no cambian.




9- Bibliografia


- Devroye, L. (1988). Applications of the theory of records in the study of random trees.
  Acta Informatica, 26(1), 123–130.

- Knuth, D. E. (1997). The Art of Computer Programming, Volume 3: Sorting and Searching
  (2nd ed.). Addison-Wesley.

- Baase, S., & Van Gelder, A. (2000). Computer Algorithms: Introduction to Design and
  Analysis (3rd ed.). Addison-Wesley.

- Cormen, T. H., Leiserson, C. E., Rivest, R. L., & Stein, C. (2009). Introduction to
  Algorithms (3rd ed.). MIT Press.

- Goodrich, M. T., & Tamassia, R. (2010). Data Structures and Algorithms in Java (5th ed.).
  Wiley.

- Weiss, M. A. (2011). Data Structures and Algorithm Analysis in Java (3rd ed.). Pearson
  Education.

- Sedgewick, R., & Wayne, K. (2011). Algorithms (4th ed.). Addison-Wesley.

- Wikipedia contributors. (2024). Binary search tree. In Wikipedia, The Free Encyclopedia.

- Referencia general para ABB, altura y recorridos.


